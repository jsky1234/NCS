/*
 * Generated by the Jasper component of Apache Tomcat
 * Version: Apache Tomcat/9.0.37
 * Generated at: 2020-11-09 02:45:09 UTC
 * Note: The last modified time of this file was set to
 *       the last modified time of the source file after
 *       generation to assist with modification tracking.
 */
package org.apache.jsp;

import javax.servlet.*;
import javax.servlet.http.*;
import javax.servlet.jsp.*;

public final class admin_jsp extends org.apache.jasper.runtime.HttpJspBase
    implements org.apache.jasper.runtime.JspSourceDependent,
                 org.apache.jasper.runtime.JspSourceImports {

  private static final javax.servlet.jsp.JspFactory _jspxFactory =
          javax.servlet.jsp.JspFactory.getDefaultFactory();

  private static java.util.Map<java.lang.String,java.lang.Long> _jspx_dependants;

  private static final java.util.Set<java.lang.String> _jspx_imports_packages;

  private static final java.util.Set<java.lang.String> _jspx_imports_classes;

  static {
    _jspx_imports_packages = new java.util.HashSet<>();
    _jspx_imports_packages.add("javax.servlet");
    _jspx_imports_packages.add("javax.servlet.http");
    _jspx_imports_packages.add("javax.servlet.jsp");
    _jspx_imports_classes = null;
  }

  private volatile javax.el.ExpressionFactory _el_expressionfactory;
  private volatile org.apache.tomcat.InstanceManager _jsp_instancemanager;

  public java.util.Map<java.lang.String,java.lang.Long> getDependants() {
    return _jspx_dependants;
  }

  public java.util.Set<java.lang.String> getPackageImports() {
    return _jspx_imports_packages;
  }

  public java.util.Set<java.lang.String> getClassImports() {
    return _jspx_imports_classes;
  }

  public javax.el.ExpressionFactory _jsp_getExpressionFactory() {
    if (_el_expressionfactory == null) {
      synchronized (this) {
        if (_el_expressionfactory == null) {
          _el_expressionfactory = _jspxFactory.getJspApplicationContext(getServletConfig().getServletContext()).getExpressionFactory();
        }
      }
    }
    return _el_expressionfactory;
  }

  public org.apache.tomcat.InstanceManager _jsp_getInstanceManager() {
    if (_jsp_instancemanager == null) {
      synchronized (this) {
        if (_jsp_instancemanager == null) {
          _jsp_instancemanager = org.apache.jasper.runtime.InstanceManagerFactory.getInstanceManager(getServletConfig());
        }
      }
    }
    return _jsp_instancemanager;
  }

  public void _jspInit() {
  }

  public void _jspDestroy() {
  }

  public void _jspService(final javax.servlet.http.HttpServletRequest request, final javax.servlet.http.HttpServletResponse response)
      throws java.io.IOException, javax.servlet.ServletException {

    if (!javax.servlet.DispatcherType.ERROR.equals(request.getDispatcherType())) {
      final java.lang.String _jspx_method = request.getMethod();
      if ("OPTIONS".equals(_jspx_method)) {
        response.setHeader("Allow","GET, HEAD, POST, OPTIONS");
        return;
      }
      if (!"GET".equals(_jspx_method) && !"POST".equals(_jspx_method) && !"HEAD".equals(_jspx_method)) {
        response.setHeader("Allow","GET, HEAD, POST, OPTIONS");
        response.sendError(HttpServletResponse.SC_METHOD_NOT_ALLOWED, "JSP들은 오직 GET, POST 또는 HEAD 메소드만을 허용합니다. Jasper는 OPTIONS 메소드 또한 허용합니다.");
        return;
      }
    }

    final javax.servlet.jsp.PageContext pageContext;
    javax.servlet.http.HttpSession session = null;
    final javax.servlet.ServletContext application;
    final javax.servlet.ServletConfig config;
    javax.servlet.jsp.JspWriter out = null;
    final java.lang.Object page = this;
    javax.servlet.jsp.JspWriter _jspx_out = null;
    javax.servlet.jsp.PageContext _jspx_page_context = null;


    try {
      response.setContentType("text/html; charset=UTF-8");
      pageContext = _jspxFactory.getPageContext(this, request, response,
      			null, true, 8192, true);
      _jspx_page_context = pageContext;
      application = pageContext.getServletContext();
      config = pageContext.getServletConfig();
      session = pageContext.getSession();
      out = pageContext.getOut();
      _jspx_out = out;

      out.write("\r\n");
      out.write("<!DOCTYPE html>\r\n");
      out.write("<html>\r\n");
      out.write("<head>\r\n");
      out.write("<meta charset=\"UTF-8\">\r\n");
      out.write("<title>관리자 모드로 로그인 중</title>\r\n");
      out.write("<style>\r\n");
      out.write("* { margin: 0; padding: 0; }\r\n");
      out.write("body, html { width: 100%; height: 100%; }\r\n");
      out.write("ul { list-style : none; }\r\n");
      out.write("a { text-decoration: none; }\r\n");
      out.write("\r\n");
      out.write("button, label, input { outline: 0; border: 0; user-select: none; }\r\n");
      out.write("img { border: 0; }\r\n");
      out.write("ol { padding: 30px; }\r\n");
      out.write(".hd { clear: both; min-height: 180px; background-color: #333; }\r\n");
      out.write(".tit { font-size: 48px; text-align: center; line-height: 140px; color: #fff; padding-top: 15px;}\r\n");
      out.write(".gnb { clear: both; height: 40px; background-color: #cccccc; }\r\n");
      out.write(".gnb li { float: left; min-width: 120px; width: auto; }\r\n");
      out.write(".gnb a { display:block; text-align: center; line-height: 40px; width: 200px; height: 40px; color: #000000; font-weight: 700; border-left: 1px solid #666666; }\r\n");
      out.write(".gnb li:last-child { border-right: 1px solid #666666; }\r\n");
      out.write("\r\n");
      out.write(".page { clear: both; padding: 30px 0 30px 0; }\r\n");
      out.write(".page_tit { text-align: center; font-size: 40px; }\r\n");
      out.write(".item_tit1 { font-size: 24px; margin-top: 30px; }\r\n");
      out.write(".item_tit2 { font-size: 18px; margin-top: 40px;}\r\n");
      out.write("\r\n");
      out.write(".ft { clear: both; position: absolute;  width: 100%; bottom: 0; min-height:80px; height: 140px; background-color: #333; }\r\n");
      out.write(".copyright { color: #fff; font-size: 20px; text-align: center; margin-top: 20px; line-height: 100px;}\r\n");
      out.write("\r\n");
      out.write("</style>\r\n");
      out.write("</head>\r\n");
      out.write("<body>\r\n");
      out.write("<header class=\"hd\">\r\n");
      out.write("\t<h2 class=\"tit\">쇼핑몰 회원관리 ver 1.0</h2>\r\n");
      out.write("</header>\r\n");
      out.write("<nav class=\"gnb\">\r\n");
      out.write("\t<ul>\r\n");
      out.write("\t\t<li><a href=\"\">회원등록</a></li>\r\n");
      out.write("\t\t<li><a href=\"\">회원목록조회/수정</a></li>\r\n");
      out.write("\t\t<li><a href=\"\">회원매출조회</a></li>\r\n");
      out.write("\t\t<li><a href=\"\">홈으로</a></li>\r\n");
      out.write("\t</ul>\r\n");
      out.write("</nav>\r\n");
      out.write("<main class=\"content\">\r\n");
      out.write("\t<section class=\"page\" id=\"page1\">\r\n");
      out.write("\t\t<h2 class=\"page_tit\">쇼핑몰회원관리프로그램</h2>\r\n");
      out.write("\t\t<div class=\"main_help\">\r\n");
      out.write("\t\t\t<h3 class=\"item_tit1\">쇼핑몰 회원정보와 회원매출정보 데이터베이스를 구축하고 회원을 관리하는 프로그램</h3>\r\n");
      out.write("\t\t\t<h3 class=\"item_tit2\">프로그램 작성 순서</h3>\r\n");
      out.write("\t\t\t<ol>\r\n");
      out.write("\t\t\t\t<li>회원정보 테이블을 생성한다.</li>\r\n");
      out.write("\t\t\t\t<li>매출정보 테이블을 생성한다.</li>\r\n");
      out.write("\t\t\t\t<li>회원정보, 매출정보 테이블에 제시된 문제지의 참조 데이터를 추가 생성한다.</li>\r\n");
      out.write("\t\t\t\t<li>회원정보 입력 화면프로그램을 작성한다.</li>\r\n");
      out.write("\t\t\t\t<li>회원정보 조회 프로그램을 작성한다.</li>\r\n");
      out.write("\t\t\t\t<li>회원매출정보 조회 프로그램을 작성한다.</li>\r\n");
      out.write("\t\t\t</ol>\r\n");
      out.write("\t\t</div>\r\n");
      out.write("\t</section>\r\n");
      out.write("</main>\r\n");
      out.write("<footer class=\"ft\">\r\n");
      out.write("\t<div class=\"ft_wrap\">\r\n");
      out.write("\t\t<div class=\"admin_copy\">\r\n");
      out.write("\t\t\t<p class=\"copyright\">HRDKOREA Copyright@2016 All rights reserved Human Resource Development Service of Korea</p>\r\n");
      out.write("\t\t</div>\r\n");
      out.write("\t</div>\r\n");
      out.write("</footer>\r\n");
      out.write("</body>\r\n");
      out.write("</html>");
    } catch (java.lang.Throwable t) {
      if (!(t instanceof javax.servlet.jsp.SkipPageException)){
        out = _jspx_out;
        if (out != null && out.getBufferSize() != 0)
          try {
            if (response.isCommitted()) {
              out.flush();
            } else {
              out.clearBuffer();
            }
          } catch (java.io.IOException e) {}
        if (_jspx_page_context != null) _jspx_page_context.handlePageException(t);
        else throw new ServletException(t);
      }
    } finally {
      _jspxFactory.releasePageContext(_jspx_page_context);
    }
  }
}
